<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
          ">
	 <bean id="threadPool"
	        class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	        <!-- 核心线程数，默认为1 -->
	        <property name="corePoolSize" value="1" />
	        <!-- 最大线程数，默认为Integer.MAX_VALUE -->
	        <property name="maxPoolSize" value="1" />
	        <!-- 队列最大长度，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE
	            <property name="queueCapacity" value="1000" /> -->
	        <!-- 线程池维护线程所允许的空闲时间，默认为60s -->
	        <property name="keepAliveSeconds" value="300" />
	        <!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
	        <property name="rejectedExecutionHandler">
	            <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->

	            <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->

	            <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->

	            <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
	         <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
	        </property>
	    </bean>
	    
  <bean id="mainExecutor" class="com.service.common.MainExecutor">  
   <constructor-arg ref="threadPool" />
  </bean>  
  
  <bean id="springScheduleExecutorTask" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="mainExecutor" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" />  
    <!-- 每次任务间隔 5秒-->  
    <property name="period" value="5000" />  
  </bean>  
    
    <bean id="springScheduledExecutorFactoryBean" class="org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean">  
    <property name="scheduledExecutorTasks">  
      <list>  
        <ref bean="springScheduleExecutorTask" />  
      </list>  
    </property>  
  </bean>  
</beans>

